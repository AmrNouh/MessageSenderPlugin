<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="DevExpress.Data.v21.1" name="DevExpress.Data.v21.1, Version=21.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="resource.SvgImage" type="DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v21.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFlEZXZFeHByZXNzLkRhdGEudjIxLjEsIFZlcnNpb249MjEuMS4z
        LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjg4ZDE3NTRkNzAwZTQ5YQUBAAAAHURl
        dkV4cHJlc3MuVXRpbHMuU3ZnLlN2Z0ltYWdlAQAAAAREYXRhBwICAAAACQMAAAAPAwAAAGEGAAAC77u/
        PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjxzdmcgd2lkdGg9IjQ2cHgiIGhl
        aWdodD0iNDZweCIgdmlld0JveD0iMCAwIDQ2IDQ2IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAw
        MC9zdmciPg0KICA8ZGVmcz4NCiAgICA8c3R5bGU+LmF7ZmlsbDojZmZmO30uYntmaWxsOiM2NjY7fTwv
        c3R5bGU+DQogIDwvZGVmcz4NCiAgPGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTkwOSwgLTMxMCkiPg0K
        ICAgIDxjaXJjbGUgY3g9IjIzIiBjeT0iMjMiIHI9IjIzIiBjbGFzcz0iYSIgdHJhbnNmb3JtPSJ0cmFu
        c2xhdGUoOTA5LCAzMTApIiAvPg0KICAgIDxwYXRoIGQ9Ik02LjY0OCwyQTEuOTU1LDEuOTU1LDAsMSww
        LDguNiwzLjk1NSwxLjk1NSwxLjk1NSwwLDAsMCw2LjY0OCwyWm02LjE4MywwYTEuOTU1LDEuOTU1LDAs
        MSwwLDEuOTU1LDEuOTU1QTEuOTU1LDEuOTU1LDAsMCwwLDEyLjgzMSwyWk02LjY0OCw2LjNhMi42NDks
        Mi42NDksMCwwLDAtMS4yLjI4MSwzLjEyNSwzLjEyNSwwLDAsMSwuMDQ5LDQuOUE0LjI3MSw0LjI3MSww
        LDAsMSw2Ljk1MywxMi43LDMuMDc2LDMuMDc2LDAsMCwxLDYuNjYsMTEuNCwzLjE0LDMuMTQsMCwwLDEs
        OS4yODcsOC4zMDUsMi43MTMsMi43MTMsMCwwLDAsNi42NDgsNi4zWm02LjE4MywwYTIuNzE4LDIuNzE4
        LDAsMCwwLTIuNjQsMS45OTIsMy4xNDEsMy4xNDEsMCwwLDEsMi43MjUsMy4xLDMuMTA4LDMuMTA4LDAs
        MCwxLS4yNTcsMS4yMzQsNC4zMTUsNC4zMTUsMCwwLDEsMS40MDUtMS4xNjEsMy4xMjUsMy4xMjUsMCww
        LDEsLjAxMi00Ljg1MUEyLjYwOSwyLjYwOSwwLDAsMCwxMi44MzEsNi4zWm0tOS4zLjRBMi4zNDYsMi4z
        NDYsMCwxLDAsNS44NzgsOS4wNTEsMi4zNDcsMi4zNDcsMCwwLDAsMy41MzIsNi43Wm0xMi41MTMsMGEy
        LjM0NiwyLjM0NiwwLDEsMCwyLjM0NiwyLjM0NkEyLjM0NywyLjM0NywwLDAsMCwxNi4wNDUsNi43Wk05
        Ljc4OCw5LjA1MUEyLjM0NiwyLjM0NiwwLDEsMCwxMi4xMzQsMTEuNCwyLjM0NywyLjM0NywwLDAsMCw5
        Ljc4OCw5LjA1MVpNMy41MTksMTEuNzc2QTMuNTIzLDMuNTIzLDAsMCwwLDAsMTUuM3YxLjM2OWEuNC40
        LDAsMCwwLC4xNTkuMzE4Yy4wOS4wNjkuOTUzLjY2LDMuMzYuNjZBMTAuNCwxMC40LDAsMCwwLDUuNSwx
        Ny40N2E0LjI5Miw0LjI5MiwwLDAsMSwxLjQzLTMuMDMxQTMuNTE2LDMuNTE2LDAsMCwwLDMuNTE5LDEx
        Ljc3NlptMTIuNTEzLDBhMy41MjQsMy41MjQsMCwwLDAtMy40MDksMi42NTIsNC4zLDQuMywwLDAsMSwx
        LjQ1NCwzLjA1NSwxMC40NjksMTAuNDY5LDAsMCwwLDEuOTU1LjE1OWMyLjQwNywwLDMuMjctLjU5MSwz
        LjM2MS0uNjZhLjQuNCwwLDAsMCwuMTU5LS4zMThWMTUuM0EzLjUyMiwzLjUyMiwwLDAsMCwxNi4wMzMs
        MTEuNzc2Wk05Ljc4OCwxNC4xMzRhMy41MjMsMy41MjMsMCwwLDAtMy41MTksMy41MTl2MS4zNjlhLjM3
        Ni4zNzYsMCwwLDAsLjE1OS4zMDVjLjA5LjA2OS45NTMuNjcyLDMuMzYxLjY3MnMzLjI3LS42LDMuMzYt
        LjY3MmEuMzc4LjM3OCwwLDAsMCwuMTU5LS4zMDVWMTcuNjU0QTMuNTIyLDMuNTIyLDAsMCwwLDkuNzg4
        LDE0LjEzNFoiIGNsYXNzPSJiIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg5MjMsIDMyMikiIC8+DQogIDwv
        Zz4NCjwvc3ZnPgs=
</value>
  </data>
</root>